/* genie_exception.c generated by valac, the Vala compiler
 * generated from genie_exception.gs, do not modify */

#include <stdlib.h>
#include <string.h>
#include <glib.h>

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))

typedef enum  {
	TEST_ERROR_FAIL,
	TEST_ERROR_BAD,
	TEST_ERROR_WORSE
} TestError;
#define TEST_ERROR test_error_quark ()

static void _vala_main (gchar** args,
                 gint args_length1);
VALA_EXTERN GQuark test_error_quark (void);

static void
_vala_main (gchar** args,
            gint args_length1)
{
	GError* e = NULL;
	GError* _tmp0_;
	_tmp0_ = g_error_new_literal (TEST_ERROR, TEST_ERROR_BAD, "not so good");
	e = _tmp0_;
	_g_error_free0 (e);
}

int
main (int argc,
      char ** argv)
{
	_vala_main (argv, argc);
	return 0;
}

GQuark
test_error_quark (void)
{
	return g_quark_from_static_string ("test-error-quark");
}

