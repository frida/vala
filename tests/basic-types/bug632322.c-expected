/* basic_types_bug632322.c generated by valac, the Vala compiler
 * generated from basic_types_bug632322.vala, do not modify */

#include <glib.h>

#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

static void _vala_main (void);

static void
_vala_main (void)
{
	gint* foo = NULL;
	gint* _tmp0_;
	gint foo_length1;
	gint _foo_size_;
	gint i = 0;
	_tmp0_ = g_new0 (gint, 42);
	foo = _tmp0_;
	foo_length1 = 42;
	_foo_size_ = foo_length1;
	i = 1;
	i = i - 1;
	foo[i] = 23;
	_vala_assert (i == 0, "i == 0");
	foo = (g_free (foo), NULL);
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

