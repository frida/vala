/* objects_gsource.c generated by valac, the Vala compiler
 * generated from objects_gsource.vala, do not modify */

#include <glib.h>
#include <glib-object.h>
#include <gio/gio.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 5)
#pragma GCC diagnostic ignored "-Wchar-subscripts"
#pragma GCC diagnostic ignored "-Wincompatible-pointer-types"
#pragma GCC diagnostic ignored "-Wint-conversion"
#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
#pragma GCC diagnostic ignored "-Wpointer-sign"
#pragma GCC diagnostic ignored "-Wpointer-to-int-cast"
#pragma GCC diagnostic ignored "-Wreturn-type"
#pragma GCC diagnostic ignored "-Wsign-compare"
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wunused-label"
#pragma GCC diagnostic ignored "-Wunused-parameter"
#pragma GCC diagnostic ignored "-Wunused-variable"
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
#pragma GCC diagnostic ignored "-Wint-to-pointer-cast"
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#pragma GCC diagnostic ignored "-Wunused-but-set-variable"
#elif defined(__clang__)
#pragma clang diagnostic ignored "-Wchar-subscripts"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#pragma clang diagnostic ignored "-Wint-conversion"
#pragma clang diagnostic ignored "-Wmissing-field-initializers"
#pragma clang diagnostic ignored "-Wpointer-sign"
#pragma clang diagnostic ignored "-Wpointer-to-int-cast"
#pragma clang diagnostic ignored "-Wreturn-type"
#pragma clang diagnostic ignored "-Wsign-compare"
#pragma clang diagnostic ignored "-Wunused-function"
#pragma clang diagnostic ignored "-Wunused-label"
#pragma clang diagnostic ignored "-Wunused-parameter"
#pragma clang diagnostic ignored "-Wunused-variable"
#pragma clang diagnostic ignored "-Wint-to-void-pointer-cast"
#pragma clang diagnostic ignored "-Wtypedef-redefinition"
#pragma clang diagnostic ignored "-Wunused-value"
#pragma clang diagnostic ignored "-Wvoid-pointer-to-int-cast"
#elif defined(_MSC_VER)
#pragma warning (disable: 4022 4047 4057 4090 4100 4102 4113 4127 4133 4152 4189 4244 4267 4305 4311 4312 4389 4456 4702 4715)
#endif
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 8)
#pragma GCC diagnostic ignored "-Wcast-function-type"
#endif
#if defined(__clang__) && (__clang_major__ >= 13)
#pragma clang diagnostic ignored "-Wunused-but-set-variable"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef GSource FooSource;
typedef struct _BarSource BarSource;
typedef GSource ManamSource;
typedef GSource MotuSource;
#define _g_source_unref0(var) ((var == NULL) ? NULL : (var = (g_source_unref (var), NULL)))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _BarSource {
	GSource parent_instance;
	gint custom_timeout;
};

static void foo_source_instance_init (FooSource * self);
static void foo_source_finalize (GSource * obj);
static gboolean foo_source_real_prepare (GSource* base,
                                  gint* timeout);
static gboolean foo_source_real_check (GSource* base);
static gboolean foo_source_real_dispatch (GSource* base,
                                   GSourceFunc callback,
                                   gpointer callback_target);
VALA_EXTERN FooSource* foo_source_new (void);
static void bar_source_instance_init (BarSource * self);
static void bar_source_finalize (GSource * obj);
VALA_EXTERN BarSource* bar_source_new (gint timeout);
static gboolean bar_source_real_prepare (GSource* base,
                                  gint* timeout);
static gboolean bar_source_real_check (GSource* base);
static gboolean bar_source_real_dispatch (GSource* base,
                                   GSourceFunc callback,
                                   gpointer callback_target);
static void manam_source_instance_init (ManamSource * self);
static void manam_source_finalize (GSource * obj);
static gboolean manam_source_real_dispatch (GSource* base,
                                     GSourceFunc callback,
                                     gpointer callback_target);
VALA_EXTERN ManamSource* manam_source_new (void);
static void motu_source_instance_init (MotuSource * self);
static void motu_source_finalize (GSource * obj);
static gboolean motu_source_real_dispatch (GSource* base,
                                    GSourceFunc callback,
                                    gpointer callback_target);
static gboolean motu_source_closure_callback (GObject* motu,
                                       GClosure* closure);
static void _vala_GValue_array_free (GValue * array,
                              gssize array_length);
VALA_EXTERN MotuSource* motu_source_new (void);
static void _vala_main (void);

static gboolean
foo_source_real_prepare (GSource* base,
                         gint* timeout)
{
	FooSource * self;
	gint _vala_timeout = 0;
	gboolean result;
	self = (FooSource*) base;
	_vala_timeout = 1000;
	result = FALSE;
	if (timeout) {
		*timeout = _vala_timeout;
	}
	return result;
}

static gboolean
foo_source_real_check (GSource* base)
{
	FooSource * self;
	gboolean result;
	self = (FooSource*) base;
	result = FALSE;
	return result;
}

static gboolean
foo_source_real_dispatch (GSource* base,
                          GSourceFunc callback,
                          gpointer callback_target)
{
	FooSource * self;
	gboolean result;
	self = (FooSource*) base;
	result = FALSE;
	return result;
}

FooSource*
foo_source_new (void)
{
	FooSource* self;
	static const GSourceFuncs _source_funcs = { foo_source_real_prepare, foo_source_real_check, foo_source_real_dispatch, foo_source_finalize, NULL, NULL };
	self = (FooSource*) g_source_new ((GSourceFuncs *) (&_source_funcs), sizeof (FooSource));
	foo_source_instance_init (self);
	return self;
}

static void
foo_source_instance_init (FooSource * self)
{
}

static void
foo_source_finalize (GSource * obj)
{
	FooSource * self;
	self = (FooSource *) obj;
}

BarSource*
bar_source_new (gint timeout)
{
	BarSource* self;
	static const GSourceFuncs _source_funcs = { bar_source_real_prepare, bar_source_real_check, bar_source_real_dispatch, bar_source_finalize, NULL, NULL };
	self = (BarSource*) g_source_new ((GSourceFuncs *) (&_source_funcs), sizeof (BarSource));
	bar_source_instance_init (self);
	self->custom_timeout = timeout;
	return self;
}

static gboolean
bar_source_real_prepare (GSource* base,
                         gint* timeout)
{
	BarSource * self;
	gint _vala_timeout = 0;
	gboolean result;
	self = (BarSource*) base;
	_vala_timeout = self->custom_timeout;
	result = FALSE;
	if (timeout) {
		*timeout = _vala_timeout;
	}
	return result;
}

static gboolean
bar_source_real_check (GSource* base)
{
	BarSource * self;
	gboolean result;
	self = (BarSource*) base;
	result = FALSE;
	return result;
}

static gboolean
bar_source_real_dispatch (GSource* base,
                          GSourceFunc callback,
                          gpointer callback_target)
{
	BarSource * self;
	gboolean result;
	self = (BarSource*) base;
	result = FALSE;
	return result;
}

static void
bar_source_instance_init (BarSource * self)
{
}

static void
bar_source_finalize (GSource * obj)
{
	BarSource * self;
	self = (BarSource *) obj;
}

static gboolean
manam_source_real_dispatch (GSource* base,
                            GSourceFunc callback,
                            gpointer callback_target)
{
	ManamSource * self;
	gboolean result;
	self = (ManamSource*) base;
	result = FALSE;
	return result;
}

ManamSource*
manam_source_new (void)
{
	ManamSource* self;
	static const GSourceFuncs _source_funcs = { NULL, NULL, manam_source_real_dispatch, manam_source_finalize, NULL, NULL };
	self = (ManamSource*) g_source_new ((GSourceFuncs *) (&_source_funcs), sizeof (ManamSource));
	manam_source_instance_init (self);
	return self;
}

static void
manam_source_instance_init (ManamSource * self)
{
}

static void
manam_source_finalize (GSource * obj)
{
	ManamSource * self;
	self = (ManamSource *) obj;
}

static gboolean
motu_source_real_dispatch (GSource* base,
                           GSourceFunc callback,
                           gpointer callback_target)
{
	MotuSource * self;
	gboolean result;
	self = (MotuSource*) base;
	result = FALSE;
	return result;
}

static void
_vala_GValue_array_free (GValue * array,
                         gssize array_length)
{
	if (array != NULL) {
		gssize i;
		for (i = 0; i < array_length; i = i + 1) {
			g_value_unset (&array[i]);
		}
	}
	g_free (array);
}

static gboolean
motu_source_closure_callback (GObject* motu,
                              GClosure* closure)
{
	GValue return_value = {0};
	GValue _tmp0_ = {0};
	GValue motu_parameter = {0};
	GValue _tmp1_ = {0};
	GValue _tmp2_;
	GValue _tmp3_;
	GValue _tmp4_ = {0};
	GValue* _tmp5_;
	GValue* _tmp6_;
	gint _tmp6__length1;
	gboolean result;
	g_return_val_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (motu, G_TYPE_OBJECT), FALSE);
	g_return_val_if_fail (closure != NULL, FALSE);
	g_value_init (&_tmp0_, G_TYPE_BOOLEAN);
	return_value = _tmp0_;
	g_value_init (&_tmp1_, G_TYPE_OBJECT);
	motu_parameter = _tmp1_;
	g_value_set_object (&motu_parameter, motu);
	_tmp2_ = motu_parameter;
	_tmp3_ = _tmp2_;
	if (G_IS_VALUE (&_tmp3_)) {
		g_value_init (&_tmp4_, G_VALUE_TYPE (&_tmp3_));
		g_value_copy (&_tmp3_, &_tmp4_);
	} else {
		_tmp4_ = _tmp3_;
	}
	_tmp5_ = g_new0 (GValue, 1);
	_tmp5_[0] = _tmp4_;
	_tmp6_ = _tmp5_;
	_tmp6__length1 = 1;
	g_closure_invoke (closure, &return_value, (guint) 1, _tmp6_, NULL);
	_tmp6_ = (_vala_GValue_array_free (_tmp6_, _tmp6__length1), NULL);
	result = g_value_get_boolean (&return_value);
	G_IS_VALUE (&motu_parameter) ? (g_value_unset (&motu_parameter), NULL) : NULL;
	G_IS_VALUE (&return_value) ? (g_value_unset (&return_value), NULL) : NULL;
	return result;
}

MotuSource*
motu_source_new (void)
{
	MotuSource* self;
	static const GSourceFuncs _source_funcs = { NULL, NULL, motu_source_real_dispatch, motu_source_finalize, (GSourceFunc) motu_source_closure_callback, NULL };
	self = (MotuSource*) g_source_new ((GSourceFuncs *) (&_source_funcs), sizeof (MotuSource));
	motu_source_instance_init (self);
	return self;
}

static void
motu_source_instance_init (MotuSource * self)
{
}

static void
motu_source_finalize (GSource * obj)
{
	MotuSource * self;
	self = (MotuSource *) obj;
}

static void
_vala_main (void)
{
	FooSource* foo = NULL;
	FooSource* _tmp0_;
	BarSource* bar = NULL;
	BarSource* _tmp1_;
	ManamSource* manam = NULL;
	ManamSource* _tmp2_;
	GSource* motu = NULL;
	GMemoryInputStream* _tmp3_;
	GMemoryInputStream* _tmp4_;
	MotuSource* _tmp5_;
	MotuSource* _tmp6_;
	GSource* _tmp7_;
	GSource* _tmp8_;
	_tmp0_ = foo_source_new ();
	foo = _tmp0_;
	_tmp1_ = bar_source_new (1000);
	bar = _tmp1_;
	_tmp2_ = manam_source_new ();
	manam = _tmp2_;
	_tmp3_ = (GMemoryInputStream*) g_memory_input_stream_new ();
	_tmp4_ = _tmp3_;
	_tmp5_ = motu_source_new ();
	_tmp6_ = _tmp5_;
	_tmp7_ = g_pollable_source_new_full (G_TYPE_CHECK_INSTANCE_CAST (_tmp4_, G_TYPE_OBJECT, GObject), (GSource*) _tmp6_, NULL);
	_tmp8_ = _tmp7_;
	_g_source_unref0 (_tmp6_);
	_g_object_unref0 (_tmp4_);
	motu = _tmp8_;
	_g_source_unref0 (motu);
	_g_source_unref0 (manam);
	_g_source_unref0 (bar);
	_g_source_unref0 (foo);
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

