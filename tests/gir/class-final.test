GIR

Input:

<class name="Foo" c:type="TestFoo" glib:type-name="TestFoo" glib:get-type="test_foo_get_type" glib:type-struct="FooClass" parent="GObject.Object">
</class>
<record name="FooClass" c:type="TestFooClass" glib:is-gtype-struct-for="Foo">
</record>
<record name="FooPrivate" c:type="TestFooPrivate" disguised="1"/>
<class name="Bar" c:type="TestBar" glib:type-name="TestBar" glib:get-type="test_bar_get_type" glib:type-struct="BarClass" parent="Test.Foo" final="1">
</class>
<record name="BarClass" c:type="TestBarClass" glib:is-gtype-struct-for="Bar">
</record>
<record name="BarPrivate" c:type="TestBarPrivate" disguised="1"/>

Output:

[CCode (cheader_filename = "test.h", type_id = "test_bar_get_type ()")]
public sealed class Bar : Test.Foo {
	[CCode (has_construct_function = false)]
	protected Bar ();
}
[CCode (cheader_filename = "test.h", type_id = "test_foo_get_type ()")]
public class Foo : GLib.Object {
	[CCode (has_construct_function = false)]
	protected Foo ();
}
