<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="GLib" version="2.0"/>
<include name="Gio" version="2.0"/>
<package name="test"/>
<c:include name="test.h"/>
<namespace name="Test" version="1.0" shared-library="test" c:prefix="Test" c:identifier-prefixes="Test" c:symbol-prefixes="test">
<class name="Foo"
       c:symbol-prefix="foo"
       c:type="TestFoo"
       parent="GLib.Object"
       glib:type-name="TestFoo"
       glib:get-type="test_foo_get_type"
       glib:type-struct="FooClass">
  <field name="parent">
    <type name="GLib.Object" c:type="GObject"/>
  </field>
  <method name="function" c:identifier="test_function">
    <return-value transfer-ownership="none">
      <type name="none"/>
    </return-value>
    <parameters>
      <instance-parameter name="self" transfer-ownership="none">
        <type name="Test.Foo" c:type="TestFoo*"/>
      </instance-parameter>
      <parameter name="callback" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
        <type name="GLib.Func" c:type="GFunc"/>
      </parameter>
      <parameter name="callback_target" transfer-ownership="none" allow-none="1" closure="0">
        <type name="gpointer" c:type="void*"/>
      </parameter>
      <parameter name="callback_target_destroy_notify" transfer-ownership="none" scope="call" destroy="0">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </parameter>
    </parameters>
  </method>
</class>
<record name="FooClass"
        c:type="TestFooClass"
        glib:is-gtype-struct-for="Foo">
</record>
<function name="function" c:identifier="test_function">
  <return-value transfer-ownership="none">
    <type name="none"/>
  </return-value>
  <parameters>
    <parameter name="callback" transfer-ownership="none" allow-none="1" closure="1" scope="notified" destroy="2">
      <type name="GLib.Func" c:type="GFunc"/>
    </parameter>
    <parameter name="callback_target" transfer-ownership="none" allow-none="1" closure="0">
      <type name="gpointer" c:type="void*"/>
    </parameter>
    <parameter name="callback_target_destroy_notify" transfer-ownership="none" scope="call" destroy="0">
      <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
    </parameter>
  </parameters>
</function>
</namespace>
</repository>
