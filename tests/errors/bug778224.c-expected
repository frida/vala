/* errors_bug778224.c generated by valac, the Vala compiler
 * generated from errors_bug778224.vala, do not modify */

#include <glib.h>

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef struct _Foo Foo;

typedef enum  {
	FOO_ERROR_BAR
} FooError;
#define FOO_ERROR foo_error_quark ()
struct _Foo {
	gint i;
};

VALA_EXTERN gboolean true;
gboolean true = TRUE;

VALA_EXTERN GQuark foo_error_quark (void);
VALA_EXTERN Foo foo (GError** error);
static void _vala_main (void);

GQuark
foo_error_quark (void)
{
	return g_quark_from_static_string ("foo-error-quark");
}

Foo
foo (GError** error)
{
	Foo _tmp3_ = {0};
	GError* _inner_error0_ = NULL;
	Foo result = {0};
	if (true) {
		GError* _tmp0_;
		_tmp0_ = g_error_new_literal (FOO_ERROR, FOO_ERROR_BAR, "");
		_inner_error0_ = _tmp0_;
		if (_inner_error0_->domain == FOO_ERROR) {
			Foo _tmp1_ = {0};
			g_propagate_error (error, _inner_error0_);
			return _tmp1_;
		} else {
			Foo _tmp2_ = {0};
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
			g_clear_error (&_inner_error0_);
			return _tmp2_;
		}
	}
	_tmp3_.i = 1;
	result = _tmp3_;
	return result;
}

static void
_vala_main (void)
{
	GError* _inner_error0_ = NULL;
	{
		foo (&_inner_error0_);
		if (G_UNLIKELY (_inner_error0_ != NULL)) {
			goto __catch0_g_error;
		}
	}
	goto __finally0;
	__catch0_g_error:
	{
		g_clear_error (&_inner_error0_);
	}
	__finally0:
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
		g_clear_error (&_inner_error0_);
		return;
	}
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

