/* errors_delegate_throws_error_code.c generated by valac, the Vala compiler
 * generated from errors_delegate_throws_error_code.vala, do not modify */

#include <glib.h>

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef void (*FooFunc) (gpointer user_data, GError** error);

typedef enum  {
	FOO_ERROR_FOO,
	FOO_ERROR_BAR
} FooError;
#define FOO_ERROR foo_error_quark ()

VALA_EXTERN GQuark foo_error_quark (void);
static void _vala_main (void);
static void __lambda4_ (GError** error);
static void ___lambda4__foo_func (gpointer self,
                           GError** error);

GQuark
foo_error_quark (void)
{
	return g_quark_from_static_string ("foo-error-quark");
}

static void
__lambda4_ (GError** error)
{
}

static void
___lambda4__foo_func (gpointer self,
                      GError** error)
{
	__lambda4_ (error);
}

static void
_vala_main (void)
{
	FooFunc foo = NULL;
	gpointer foo_target;
	GDestroyNotify foo_target_destroy_notify;
	GError* _inner_error0_ = NULL;
	foo = ___lambda4__foo_func;
	foo_target = NULL;
	foo_target_destroy_notify = NULL;
	foo (foo_target, &_inner_error0_);
	if (G_UNLIKELY (_inner_error0_ != NULL)) {
		(foo_target_destroy_notify == NULL) ? NULL : (foo_target_destroy_notify (foo_target), NULL);
		foo = NULL;
		foo_target = NULL;
		foo_target_destroy_notify = NULL;
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error0_->message, g_quark_to_string (_inner_error0_->domain), _inner_error0_->code);
		g_clear_error (&_inner_error0_);
		return;
	}
	(foo_target_destroy_notify == NULL) ? NULL : (foo_target_destroy_notify (foo_target), NULL);
	foo = NULL;
	foo_target = NULL;
	foo_target_destroy_notify = NULL;
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

