/* methods_return_unowned_delegate.c generated by valac, the Vala compiler
 * generated from methods_return_unowned_delegate.vala, do not modify */

#include <glib.h>

#if !defined(VALA_STRICT_C)
#if !defined(__clang__) && defined(__GNUC__)
#pragma GCC diagnostic ignored "-Wchar-subscripts"
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#pragma GCC diagnostic ignored "-Wincompatible-pointer-types"
#pragma GCC diagnostic ignored "-Wint-conversion"
#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
#pragma GCC diagnostic ignored "-Wpointer-sign"
#pragma GCC diagnostic ignored "-Wpointer-to-int-cast"
#pragma GCC diagnostic ignored "-Wreturn-type"
#pragma GCC diagnostic ignored "-Wsign-compare"
#pragma GCC diagnostic ignored "-Wunused-but-set-variable"
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wunused-label"
#pragma GCC diagnostic ignored "-Wunused-parameter"
#pragma GCC diagnostic ignored "-Wunused-variable"
#pragma GCC diagnostic ignored "-Wdiscarded-qualifiers"
#pragma GCC diagnostic ignored "-Wint-to-pointer-cast"
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#elif defined(__clang__)
#pragma clang diagnostic ignored "-Wchar-subscripts"
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wincompatible-pointer-types"
#pragma clang diagnostic ignored "-Wint-conversion"
#pragma clang diagnostic ignored "-Wmissing-field-initializers"
#pragma clang diagnostic ignored "-Wpointer-sign"
#pragma clang diagnostic ignored "-Wpointer-to-int-cast"
#pragma clang diagnostic ignored "-Wreturn-type"
#pragma clang diagnostic ignored "-Wsign-compare"
#pragma clang diagnostic ignored "-Wunused-but-set-variable"
#pragma clang diagnostic ignored "-Wunused-function"
#pragma clang diagnostic ignored "-Wunused-label"
#pragma clang diagnostic ignored "-Wunused-parameter"
#pragma clang diagnostic ignored "-Wunused-variable"
#pragma clang diagnostic ignored "-Wint-to-void-pointer-cast"
#pragma clang diagnostic ignored "-Wtypedef-redefinition"
#pragma clang diagnostic ignored "-Wunused-value"
#pragma clang diagnostic ignored "-Wvoid-pointer-to-int-cast"
#elif defined(_MSC_VER)
#pragma warning (disable: 4022 4047 4057 4090 4100 4102 4113 4127 4133 4152 4189 4244 4267 4305 4311 4312 4389 4456 4702 4715)
#endif
#if !defined(__clang__) && defined(__GNUC__) && (__GNUC__ >= 8)
#pragma GCC diagnostic ignored "-Wcast-function-type"
#endif
#endif
#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef gint (*FooFunc) (gpointer user_data);
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

VALA_EXTERN FooFunc foo (gpointer* result_target);
VALA_EXTERN gint manam (void);
VALA_EXTERN FooFunc bar (gpointer* result_target);
static gint _vala_lambda0_ (void);
static gint __vala_lambda0__foo_func (gpointer self);
static void _vala_main (void);

FooFunc
foo (gpointer* result_target)
{
	FooFunc _tmp0_;
	gpointer _tmp0__target;
	FooFunc result;
	_tmp0_ = (FooFunc) manam;
	_tmp0__target = NULL;
	*result_target = _tmp0__target;
	result = _tmp0_;
	return result;
}

static gint
_vala_lambda0_ (void)
{
	gint result;
	result = 4711;
	return result;
}

static gint
__vala_lambda0__foo_func (gpointer self)
{
	gint result;
	result = _vala_lambda0_ ();
	return result;
}

FooFunc
bar (gpointer* result_target)
{
	FooFunc _tmp0_;
	gpointer _tmp0__target;
	FooFunc result;
	_tmp0_ = __vala_lambda0__foo_func;
	_tmp0__target = NULL;
	*result_target = _tmp0__target;
	result = _tmp0_;
	return result;
}

gint
manam (void)
{
	gint result;
	result = 42;
	return result;
}

static void
_vala_main (void)
{
	{
		FooFunc func = NULL;
		gpointer _tmp0_ = NULL;
		FooFunc _tmp1_;
		gpointer func_target;
		GDestroyNotify func_target_destroy_notify;
		FooFunc _tmp2_;
		gpointer _tmp2__target;
		GDestroyNotify _tmp2__target_destroy_notify;
		_tmp1_ = foo (&_tmp0_);
		func = _tmp1_;
		func_target = _tmp0_;
		func_target_destroy_notify = NULL;
		_tmp2_ = (FooFunc) manam;
		_tmp2__target = NULL;
		_tmp2__target_destroy_notify = NULL;
		_vala_assert (func == _tmp2_, "func == (FooFunc) manam");
		(_tmp2__target_destroy_notify == NULL) ? NULL : (_tmp2__target_destroy_notify (_tmp2__target), NULL);
		_tmp2_ = NULL;
		_tmp2__target = NULL;
		_tmp2__target_destroy_notify = NULL;
		_vala_assert (func (func_target) == 42, "func () == 42");
		(func_target_destroy_notify == NULL) ? NULL : (func_target_destroy_notify (func_target), NULL);
		func = NULL;
		func_target = NULL;
		func_target_destroy_notify = NULL;
	}
	{
		FooFunc func = NULL;
		gpointer _tmp3_ = NULL;
		FooFunc _tmp4_;
		gpointer func_target;
		GDestroyNotify func_target_destroy_notify;
		_tmp4_ = bar (&_tmp3_);
		func = _tmp4_;
		func_target = _tmp3_;
		func_target_destroy_notify = NULL;
		_vala_assert (func (func_target) == 4711, "func () == 4711");
		(func_target_destroy_notify == NULL) ? NULL : (func_target_destroy_notify (func_target), NULL);
		func = NULL;
		func_target = NULL;
		func_target_destroy_notify = NULL;
	}
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

