.TH valac 1 "13 April 2010" "vala-0.8.0" "Vala"
.SH NAME
valac \- compiler that translates Vala source code into C source and header files
.SH SYNOPSIS
.B valac
[\fIOPTION\fR]... [\fIFILE\fR]...
.SH DESCRIPTION
Vala  is  a  new  programming  language  that  aims  to  bring  modern
programming language features to GNOME developers without imposing any
additional  runtime requirements  and  without using  a different  ABI
compared to applications and libraries written in C.

valac, the Vala compiler, is a self-hosting compiler that translates
Vala source code into C source and header files. It uses the GObject
type system to create classes and interfaces declared in the Vala
source code.
.SH OPTIONS
.TP
.B \--help
.TP
.B \--vapidir=\fIDIRECTORY\fR...
Look for package bindings in \fIDIRECTORY\fR
.TP
.B \--girdir=\fIDIRECTORY\fR...
Look for .gir files in \fIDIRECTORY\fR
.TP
.B \--metadatadir=\fIDIRECTORY\fR...
Look for GIR .metadata files in \fIDIRECTORY\fR
.TP
.B \--pkg=\fIPACKAGE\fR...
Include binding for \fIPACKAGE\fR
.TP
.B \--vapi=\fIFILE\fR
Output VAPI file name
.TP
.B \--library=\fINAME\fR
Library name
.TP
.B \--shared-library=\fINAME\fR
Shared library name used in generated .gir
.TP
.B \--gir=\fINAME\fR-\fIVERSION\fR.gir
GObject-Introspection repository file name
.TP
.B \--gresources=\fIFILE\fR...
GResources XML file name
.TP
.B \-b, --basedir=\fIDIRECTORY\fR
Base source directory
.TP
.B \-d, --directory=\fIDIRECTORY\fR
Output directory
.TP
.B \--version
Display version number
.TP
.B \--api-version
Display API version number
.TP
.B \-C, --ccode
Output C code
.TP
.B \-H, --header=\fIFILE\fR
Output C header file
.TP
.B \--use-header
Use C header file
.TP
.B \--includedir=\fIDIRECTORY\fR
Directory used to include the C header file
.TP
.B \-h, --internal-header=\fIFILE\fR
Output internal C header file
.TP
.B \--internal-vapi=\fIFILE\fR
Output vapi with internal api
.TP
.B \--symbols=\fIFILE\fR
Output symbols file
.TP
.B \-c, --compile
Compile but do not link
.TP
.B \-o, --output=\fIFILE\fR
Place output in file \fIFILE\fR
.TP
.B \-g, --debug
Produce debug information
.TP
.B \--thread
Enable multithreading support
.TP
.B \--enable-mem-profiler
Enable GLib memory profiler
.TP
.B \-D, --define=SYMBOL...
Define SYMBOL
.TP
.B \--main=SYMBOL...
Use SYMBOL as entry point
.TP
.B \--nostdpkg
Do not include standard packages
.TP
.B \--disable-assert
Disable assertions
.TP
.B \--enable-checking
Enable additional run-time checks
.TP
.B \--enable-deprecated
Enable deprecated features
.TP
.B \--enable-experimental
Enable experimental features
.TP
.B \--disable-warnings
Disable warnings
.TP
.B \--fatal-warnings
Treat warnings as fatal
.TP
.B \--enable-experimental-non-null
Enable experimental enhancements for non-null types
.TP
.B \--cc=\fICOMMAND\fR
Use \fICOMMAND\fR as C compiler command
.TP
.B \-X, --Xcc=\fIOPTION\fR...
Pass \fIOPTION\fR. to the C compiler
.TP
.B \--dump-tree=\fIFILE\fR
Write code tree to \fIFILE\fR
.TP
.B \--save-temps
Keep temporary files
.TP
.B \--profile=\fIPROFILE\fR
Use the given profile instead of the default
.TP
.B \--no-color
Disable colored output
.TP
.B \-q, --quiet
Do not print messages to the console
.TP
.B \-v, --verbose
Print additional messages to the console
.TP
.B \--target-glib=\fIMAJOR\fR.\fIMINOR\fR
Target version of glib for code generation
.TP
.B \--enable-version-header
Write vala build version in generated files
.TP
.B \--disable-version-header
Do not write vala build version in generated files
.SH FEATURES
Interfaces, properties, signals, foreach, lambda expressions, type
inference for local variables, generics, non-null types, assisted memory
management, exception handling
.SH HOMEPAGE AND BUG REPORT
http://www.vala-project.org/
.SH AUTHORS
JÃ¼rg Billeter, Raffaele Sandrini.

Man page written to conform with Debian by Marc-Andre Lureau.

